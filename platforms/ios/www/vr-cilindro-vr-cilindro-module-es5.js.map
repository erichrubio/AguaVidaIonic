{"version":3,"sources":["./src/app/vr-cilindro/vr-cilindro.page.html","./src/app/vr-cilindro/vr-cilindro-routing.module.ts","./src/app/vr-cilindro/vr-cilindro.module.ts","./src/app/vr-cilindro/vr-cilindro.page.scss","./src/app/vr-cilindro/vr-cilindro.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,85BAA85B,iBAAiB,gN;;;;;;;;;;;;;;;;;;;ACAt4B;AACc;AAEH;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAMF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QAJvC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACmB;AAErB;AAE8B;AAEvB;AAYpD;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAVhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,uFAA2B;aAC5B;YACD,YAAY,EAAE,CAAC,gEAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACpBjC,+DAA+D,mJ;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAOpE;IASE;QALA,yBAAyB;QAClB,oBAAe,GAAW,EAAE,CAAC;IAIpB,CAAC;IAEjB,iCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;gBACnD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC;aACtB,CAAC,CAAC;YACH,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;gBACjD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC;aACtB,CAAC,CAAC;SACJ,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR,UACE,MAGC;QACD,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QACrC,IAAI,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,MAAM,GAAG,IAAI,CAAC;QAGrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACrE,CAAC;IAvCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,yJAAsC;;SAEvC,CAAC;;OACW,cAAc,CAyC1B;IAAD,qBAAC;CAAA;AAzC0B","file":"vr-cilindro-vr-cilindro-module-es5.js","sourcesContent":["module.exports = \"<ion-header translucent>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Volumen de Tanque (Cilindro)</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen class=\\\"ion-padding\\\">\\n\\n  <form [formGroup]=\\\"vr_cilindro_form\\\" (ngSubmit)=\\\"onSubmit(vr_cilindro_form.value)\\\">\\n\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Diametro del tanque (metros)</ion-label>\\n        <ion-input formControlName=\\\"diametro_t\\\" type=\\\"number\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Altura del tanque (metros)</ion-label>\\n        <ion-input formControlName=\\\"altura_t\\\" type=\\\"number\\\">\\n        </ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-item>\\n      <ion-text color=\\\"success\\\">\\n  \\t\\t\\t<h3>{{vr_cilindro_str}}</h3>\\n  \\t\\t</ion-text>\\n    </ion-item>\\n\\n    <ion-button color=\\\"primary\\\" class=\\\"submit-btn\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!vr_cilindro_form.valid\\\">Calcular</ion-button>\\n\\n  </form>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VrCilindroPage } from './vr-cilindro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VrCilindroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VrCilindroPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VrCilindroPageRoutingModule } from './vr-cilindro-routing.module';\n\nimport { VrCilindroPage } from './vr-cilindro.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    VrCilindroPageRoutingModule\n  ],\n  declarations: [VrCilindroPage]\n})\nexport class VrCilindroPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZyLWNpbGluZHJvL3ZyLWNpbGluZHJvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-vr-cilindro',\n  templateUrl: './vr-cilindro.page.html',\n  styleUrls: ['./vr-cilindro.page.scss'],\n})\nexport class VrCilindroPage implements OnInit {\n\n  public vr_cilindro_form: FormGroup;\n\n  // final value to display\n  public vr_cilindro_str: string = \"\";\n\n  public vr_cilindro_val: number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.vr_cilindro_form = new FormGroup({\n      diametro_t: new FormControl(null, Validators.compose([\n        Validators.required,\n        Validators.min(0.001)\n      ])),\n      altura_t: new FormControl(null, Validators.compose([\n        Validators.required,\n        Validators.min(0.001)\n      ]))\n    })\n  }\n\n  onSubmit(\n    values: {\n      diametro_t: number;\n      altura_t: number;\n    }) {\n    console.log('vr-cilindro submit button clicked.');\n    console.log(values);\n\n    let radius = (values.diametro_t / 2);\n    let meters = Math.PI * (radius * radius) * values.altura_t;\n    console.log(meters);\n    this.vr_cilindro_val = meters * 1000;\n\n\n    this.vr_cilindro_str = this.vr_cilindro_val.toFixed(0) + \" litros\";\n  }\n\n}\n"],"sourceRoot":""}