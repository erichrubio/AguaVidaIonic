{"version":3,"sources":["./src/app/desinfeccion/desinfeccion.page.html","./src/app/desinfeccion/desinfeccion-routing.module.ts","./src/app/desinfeccion/desinfeccion.module.ts","./src/app/desinfeccion/desinfeccion.page.scss","./src/app/desinfeccion/desinfeccion.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kuCAAkuC,kBAAkB,mO;;;;;;;;;;;;;;;;;;;ACA3sC;AACc;AAEA;AAEvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAMF;IAAA;IAA4C,CAAC;IAAhC,6BAA6B;QAJzC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,6BAA6B,CAAG;IAAD,oCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACmB;AAErB;AAEiC;AAEvB;AAYvD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAVlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,0FAA6B;aAC9B;YACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACpBnC,+DAA+D,uJ;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAOpE;IASE;QALA,yBAAyB;QAClB,qBAAgB,GAAW,EAAE,CAAC;IAIrB,CAAC;IAEjB,mCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,wDAAS,CAAC;YACrC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;gBACrD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC;aACtB,CAAC,CAAC;YACH,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;gBACrD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC;aACtB,CAAC,CAAC;YACH,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAChD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC;aACtB,CAAC,CAAC;SACJ,CAAC;IACJ,CAAC;IAED,mCAAQ,GAAR,UACE,MAIC;QACD,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAI,CAAC,gBAAgB,GAAG;QACtB,sCAAsC;QACtC,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YAClD,uCAAuC;YACvC,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,CACvB,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACvE,CAAC;IA7CU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,4JAAuC;;SAExC,CAAC;;OACW,gBAAgB,CA+C5B;IAAD,uBAAC;CAAA;AA/C4B","file":"desinfeccion-desinfeccion-module-es5.js","sourcesContent":["module.exports = \"<ion-header translucent>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Desinfección del Reservorio</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen class=\\\"ion-padding\\\">\\n\\n  <form [formGroup]=\\\"desinfeccion_form\\\" (ngSubmit)=\\\"onSubmit(desinfeccion_form.value)\\\">\\n\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Volumen del Reservorio (Litros)</ion-label>\\n        <ion-input formControlName=\\\"v_reservorio\\\" type=\\\"number\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label class=\\\"ion-text-wrap\\\" position=\\\"stacked\\\">Concentración Deseada del Reservorio (miligramos por litro)</ion-label>\\n        <ion-input formControlName=\\\"c_reservorio\\\" type=\\\"number\\\" placeholder=\\\"ejemplos: 1.0 o 1.5\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Porcentaje de Cloro</ion-label>\\n        <ion-input formControlName=\\\"p_cloro\\\" type=\\\"number\\\" placeholder=\\\"ejemplos: 65 o 70\\\">\\n        </ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-item>\\n      <ion-text color=\\\"success\\\">\\n  \\t\\t\\t<h3>{{desinfeccion_str}}</h3>\\n  \\t\\t</ion-text>\\n    </ion-item>\\n\\n    <ion-button color=\\\"primary\\\" class=\\\"submit-btn\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!desinfeccion_form.valid\\\">Calcular</ion-button>\\n\\n  </form>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DesinfeccionPage } from './desinfeccion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DesinfeccionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DesinfeccionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DesinfeccionPageRoutingModule } from './desinfeccion-routing.module';\n\nimport { DesinfeccionPage } from './desinfeccion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    DesinfeccionPageRoutingModule\n  ],\n  declarations: [DesinfeccionPage]\n})\nexport class DesinfeccionPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rlc2luZmVjY2lvbi9kZXNpbmZlY2Npb24ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-desinfeccion',\n  templateUrl: './desinfeccion.page.html',\n  styleUrls: ['./desinfeccion.page.scss'],\n})\nexport class DesinfeccionPage implements OnInit {\n\n  public desinfeccion_form: FormGroup;\n\n  // final value to display\n  public desinfeccion_str: string = \"\";\n\n  public desinfeccion_val: number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.desinfeccion_form = new FormGroup({\n      v_reservorio: new FormControl(null, Validators.compose([\n        Validators.required,\n        Validators.min(0.001)\n      ])),\n      c_reservorio: new FormControl(null, Validators.compose([\n        Validators.required,\n        Validators.min(0.001)\n      ])),\n      p_cloro: new FormControl(null, Validators.compose([\n        Validators.required,\n        Validators.min(0.001)\n      ]))\n    })\n  }\n\n  onSubmit(\n    values: {\n      v_reservorio: number;\n      c_reservorio: number;\n      p_cloro: number;\n    }) {\n    console.log('desinfeccion submit button clicked.');\n    console.log(values);\n\n    this.desinfeccion_val = (\n      // liters * (mg/L) * 1g/1000mg = grams\n      (values.v_reservorio * values.c_reservorio / 1000) /\n      // change percent to decimal (no units)\n      (values.p_cloro / 100)\n    );\n\n    this.desinfeccion_str = this.desinfeccion_val.toFixed(1) + \" gramos\";\n  }\n\n}\n"],"sourceRoot":""}